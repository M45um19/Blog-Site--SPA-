{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const isUndefined = value => value === undefined;\n\nconst isNull = value => value === null;\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst isObject = value => value === Object(value);\n\nconst isArray = value => Array.isArray(value);\n\nconst isDate = value => value instanceof Date;\n\nconst isBlob = value =>\n  value &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.slice === 'function';\n\nconst isFile = value =>\n  isBlob(value) &&\n  typeof value.name === 'string' &&\n  (typeof value.lastModifiedDate === 'object' ||\n    typeof value.lastModified === 'number');\n\nexport const objectToFormData = (obj, cfg, fd, pre) => {\n  cfg = cfg || {};\n\n  cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n\n  cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds)\n    ? false\n    : cfg.nullsAsUndefineds;\n\n  cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers)\n    ? false\n    : cfg.booleansAsIntegers;\n\n  fd = fd || new FormData();\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        const key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        objectToFormData(value, cfg, fd, key);\n      });\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n    Object.keys(obj).forEach(prop => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre ? pre + '[' + prop + ']' : prop;\n\n      objectToFormData(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n};\n"],"names":["const","isUndefined","value","undefined","isArray","Array","isBlob","size","type","slice","objectToFormData","obj","cfg","fd","pre","indices","nullsAsUndefineds","booleansAsIntegers","FormData","append","length","forEach","index","Date","toISOString","Object","name","lastModifiedDate","lastModified","isFile","keys","prop","lastIndexOf","substring"],"mappings":"AAAAA,IAAMC,WAAcC,eAAmBC,IAAVD,GAQvBE,WAAUF,UAASG,MAAMD,QAAQF,IAIjCI,WAASJ,UACbA,GACsB,iBAAfA,EAAMK,MACS,iBAAfL,EAAMM,MACU,mBAAhBN,EAAMO,OAQFC,WAAoBC,EAAKC,EAAKC,EAAIC,UAC7CF,EAAMA,GAAO,IAETG,SAAUd,EAAYW,EAAIG,UAAmBH,EAAIG,QAErDH,EAAII,mBAAoBf,EAAYW,EAAII,oBAEpCJ,EAAII,kBAERJ,EAAIK,oBAAqBhB,EAAYW,EAAIK,qBAErCL,EAAIK,mBAERJ,EAAKA,GAAM,IAAIK,SAEXjB,EAAYU,GACPE,GAtCuB,OAuCdF,EACXC,EAAII,mBACPH,EAAGM,OAAOL,EAAK,IAvCuB,kBAyCrBH,EAMVP,EAAQO,GACbA,EAAIS,QACNT,EAAIU,iBAASnB,EAAOoB,GAGlBZ,EAAiBR,EAAOU,EAAKC,EAFjBC,EAAM,KAAOF,EAAIG,QAAUO,EAAQ,IAAM,OAKzCX,aAjDqBY,KAkDrCV,EAAGM,OAAOL,EAAKH,EAAIa,eACDb,IAvDcc,OAuDdd,aA3CPT,UACbI,EAAOJ,IACe,iBAAfA,EAAMwB,OACsB,iBAA3BxB,EAAMyB,kBACkB,iBAAvBzB,EAAM0B,cAuCcC,CAAOlB,IAASL,EAAOK,GAelDE,EAAGM,OAAOL,EAAKH,GAdfc,OAAOK,KAAKnB,GAAKU,iBAAQU,OACjB7B,EAAQS,EAAIoB,MAEd3B,EAAQF,QACH6B,EAAKX,OAAS,GAAKW,EAAKC,YAAY,QAAUD,EAAKX,OAAS,GACjEW,EAAOA,EAAKE,UAAU,EAAGF,EAAKX,OAAS,GAM3CV,EAAiBR,EAAOU,EAAKC,EAFjBC,EAAMA,EAAM,IAAMiB,EAAO,IAAMA,KAxB3ClB,EAAGM,OAAOL,EADRF,EAAIK,mBACSN,EAAM,EAAI,EAEVA,GA8BZE"}